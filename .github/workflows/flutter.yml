name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

    # on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # - name: Run PlatformIO
      #   run: pio run -d $GITHUB_WORKSPACE
      - name: Display the path
        run: echo $PATH
        shell: bash

      - name: Create App Config File
        # run: cat /lib/constraints/configs.dart | base64
        
        run: |
          pwd
          ls
          echo "Creating File"

          cd ./lib/constraints/
          touch configs.dart
          echo aws_host="class AppConfig {  String get oneSignalAppId => ""; }" >> configs.dart
          cd

      - name: Create File
        uses: finnp/create-file-action@1.0.0
        env:
          FILE_NAME: "lib/constraints/configs.dart"
          FILE_DATA: ${{ secrets.APP_CONFIG_DATA }}


      # - name: Putting data
      #   env:
      #     DATA: ${{ secrets.APP_CONFIG_DATA }}
      #   run: echo $DATA > /lib/constraints/configs.dart


      # - name: Create Google-Services File
      #   run: cat /home/runner/work/flutter_getting_started/android/app/google-services.json

      # - name: Putting data
      #   env:
      #     DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
      #   run: echo $DATA > /home/runner/work/flutter_getting_started/android/app/google-services.json

      - name: Create Google-Services File
        uses: finnp/create-file-action@1.0.0
        env:
          FILE_NAME: "/android/app/google-services.json"
          FILE_DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}


      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get
#      - run: flutter pub run build_runner build --delete-conflicting-outputs

      # Check for any formatting issues in the code.
#      - run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
#      - run: flutter analyze .

      # Run widget tests for our flutter project.
#      - run: flutter test

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk